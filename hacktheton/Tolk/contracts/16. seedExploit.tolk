const OP_UNLOCK = "op::unlock"c; // create an opcode from string using the "c" prefix, this results in 0xf0fd50bb opcode in this case

fun onInternalMessage(myBalance: int, msgValue: int, inMsgFull: cell, inMsgBody: slice) {
    if (inMsgBody.isEndOfSlice()) {
        return;
    }

    var cs: slice = inMsgFull.beginParse();
    val flags: int = cs.loadUint(4);
    if (flags & 1) {
        return;
    }

    val target: slice = inMsgBody.loadAddress();
    val seed: int = inMsgBody.loadUint(256);

    randomSetSeed(seed);
    val guess: int = random();

    val msgBody: cell = beginCell()
        .storeUint(OP_UNLOCK, 32)
        .storeUint(guess, 256)
    .endCell();

    val msg: builder = beginCell()
        .storeUint(0x18, 6)
        .storeSlice(target)
        .storeCoins(0)
        .storeUint(1, 1 + 4 + 4 + 64 + 32 + 1 + 1)
        .storeRef(msgBody);

    sendRawMessage(msg.endCell(), 64);   

    return;
}
